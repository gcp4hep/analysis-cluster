# file: secrets.yaml
jupyterhub:
  singleuser:
    # Defines the default image
    image:
      name: eu.gcr.io/gke-dev-311213/jupyter-coffea
      tag: "20210518"
    profileList:
      - display_name: "pyHEP environment"
        description: "coffea, uproot..."
        default: true
      - display_name: "ML environment"
        description: "keras, flatbuffers, joblib, pillow, pytz, scikit-learn, scipy, uproot, root-numpy"
        kubespawner_override:
          image: eu.gcr.io/gke-dev-311213/jupyter-ml:20210518
      - display_name: "PHYSLITE environment"
        description: "environment for experiments with DAOD_PHYSLITE with uproot, awkward etc."
        kubespawner_override:
          image: eu.gcr.io/gke-dev-311213/jupyter-physlite:20210526
    extraEnv:
      ATLAS_LOCAL_ROOT_BASE: /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
      RUCIO_HOME: /srv/conda/envs/notebook
    storage:
      extraVolumes:
        - name: atlas
          persistentVolumeClaim:
            claimName: cvmfs-config-atlas
            readOnly: true
        - name: atlas-condb
          persistentVolumeClaim:
            claimName: cvmfs-config-atlas-condb
            readOnly: true
        - name: atlas-nightlies
          persistentVolumeClaim:
            claimName: cvmfs-config-atlas-nightlies
            readOnly: true
        - name: grid
          persistentVolumeClaim:
            claimName: cvmfs-config-grid
            readOnly: true
        - name: sft
          persistentVolumeClaim:
            claimName: cvmfs-config-sft
            readOnly: true
        - name: sft-nightlies
          persistentVolumeClaim:
            claimName: cvmfs-config-sft-nightlies
            readOnly: true
        - name: unpacked
          persistentVolumeClaim:
            claimName: cvmfs-config-unpacked
            readOnly: true
      extraVolumeMounts:
        - name: atlas
          mountPath: /cvmfs/atlas.cern.ch
        - name: atlas-condb
          mountPath: /cvmfs/atlas-condb.cern.ch
        - name: atlas-nightlies
          mountPath: /cvmfs/atlas-nightlies.cern.ch
        - name: grid
          mountPath: /cvmfs/grid.cern.ch
        - name: sft
          mountPath: /cvmfs/sft.cern.ch
        - name: sft-nightlies
          mountPath: /cvmfs/sft-nightlies.cern.ch
        - name: unpacked
          mountPath: /cvmfs/unpacked.cern.ch

  proxy:
    secretToken: <TOKEN1>

  hub:
    services:
      dask-gateway:
        apiToken: <TOKEN2>

    networkPolicy:
      enabled: False

    config:
      Authenticator:
        admin_users:
          - <admin_user>
        allowed_users:
          - <user1>
          - <user2>
      DummyAuthenticator:
        password: <PASSWORD>
      JupyterHub:
        authenticator_class: dummy

dask-gateway:
  traefik:
    service:
      type: LoadBalancer

  gateway:
    auth:
      jupyterhub:
        apiToken: <TOKEN 2>

    backend:
      worker:
        extraPodConfig:
          volumes:
            - name: atlas
              persistentVolumeClaim:
                claimName: cvmfs-config-atlas
                readOnly: true
            - name: atlas-condb
              persistentVolumeClaim:
                claimName: cvmfs-config-atlas-condb
                readOnly: true
            - name: atlas-nightlies
              persistentVolumeClaim:
                claimName: cvmfs-config-atlas-nightlies
                readOnly: true
            - name: grid
              persistentVolumeClaim:
                claimName: cvmfs-config-grid
                readOnly: true
            - name: sft
              persistentVolumeClaim:
                claimName: cvmfs-config-sft
                readOnly: true
            - name: sft-nightlies
              persistentVolumeClaim:
                claimName: cvmfs-config-sft-nightlies
                readOnly: true
            - name: unpacked
              persistentVolumeClaim:
                claimName: cvmfs-config-unpacked
                readOnly: true
        extraContainerConfig:
           volumeMounts:
             - name: atlas
               mountPath: /cvmfs/atlas.cern.ch
             - name: atlas-condb
               mountPath: /cvmfs/atlas-condb.cern.ch
             - name: atlas-nightlies
               mountPath: /cvmfs/atlas-nightlies.cern.ch
             - name: grid
               mountPath: /cvmfs/grid.cern.ch
             - name: sft
               mountPath: /cvmfs/sft.cern.ch
             - name: sft-nightlies
               mountPath: /cvmfs/sft-nightlies.cern.ch
             - name: unpacked
               mountPath: /cvmfs/unpacked.cern.ch

    extraConfig:
      optionHandler: |
        from dask_gateway_server.options import Options, Integer, Float, String
        def option_handler(options):
            if ":" not in options.image:
                raise ValueError("When specifying an image you must also provide a tag")
            return {
                "image": options.image,
            "worker_cores": options.worker_cores,
            "worker_memory": int(options.worker_memory * 2 ** 30),
            }
        c.Backend.cluster_options = Options(
            Integer("worker_cores", default=1, min=1, max=4, label="Worker Cores"),
            Float("worker_memory", default=1, min=1, max=8, label="Worker Memory (GiB)"),
            String("image", default="eu.gcr.io/gke-dev-311213/dask-gateway-coffea:20210518", label="Image"),
            handler=option_handler,
        )
